// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Role {
  id          Int          @id @default(autoincrement())
  name        String       @unique
  users       User[]
  permissions Permission[]
}

model Permission {
  id    Int    @id @default(autoincrement())
  name  String @unique
  roles Role[]
}

model User {
  id            Int       @id @default(autoincrement())
  email         String    @unique
  password      String
  first_name    String
  last_name     String
  date_of_birth DateTime  @db.Date
  type          UserType
  activated     Boolean   @default(false)
  phone         String
  avatar        String?
  student       Student?
  teacher       Teacher?
  staff         Staff?
  roles         Role[]
  owned_projects      Project[] @relation("ownership")
  member_in_projects Project[] @relation("membership")
}

enum UserType {
  student
  teacher
  staff
}

model Student {
  id               Int    @id
  user             User   @relation(fields: [id], references: [id])
  registration_num String
  establishement   String
  filiere          String
  specialty        String
}

model Teacher {
  id                     Int                 @id
  user                   User                @relation(fields: [id], references: [id])
  registration_num       String
  establishement         String
  grade                  String
  specialty              String
  supervised_projects    Project[]           @relation(name: "supervision")
  co_supervised_projects Project[]           @relation(name: "co_supervision")
  proejct_validation      ProejctValidation[]
}

model Staff {
  id    Int    @id
  user  User   @relation(fields: [id], references: [id])
  grade String
}

model Project {
  id           Int         @id @default(autoincrement())
  type         ProjectType
  resume       String
  brand_name   String
  product_name String
  created_at   DateTime    @default(now())
  owner_id         Int
  owner            User               @relation(fields: [owner_id], references: [id], name: "ownership")
  supervisor_id    Int
  supervisor       Teacher            @relation(fields: [supervisor_id], references: [id], name: "supervision")
  co_supervisor_id Int
  co_supervisor    Teacher            @relation(fields: [co_supervisor_id], references: [id], name: "co_supervision")
  validation       ProejctValidation?
  members User[] @relation(name: "membership")
}

enum ProjectType {
  startup
  patent
}

model ProejctValidation {
  id      Int     @id
  project Project @relation(fields: [id], references: [id])
  decision     ProjectValidationDecision
  reservation  ProjectValidationReservation?
  note         String
  validator_id Int
  validator    Teacher                      @relation(fields: [validator_id], references: [id])
}

enum ProjectValidationDecision {
  favorable
  unfavorable
  accepted_with_reservation
}

enum ProjectValidationReservation {
  major
  minor
}
